(defpackage :rdsg
  (:use cl)
  (:local-nicknames (:rds :redis))
  (:use cl-json)
  (:use quri)
  (:export :rdisgresponse)
  )
(in-package :rd)
(defvar *REDIS_URI* (uri (asdf::getenv "REDIS_URL")))
(defvar *REDIS_USER* (car(asdf::split-string (uri-userinfo *REDIS_URI*) :max 2 :separator ":")))
(defvar *REDIS_PWD* (car (last (asdf::split-string (uri-userinfo *REDIS_URI*) :max 2 :separator ":"))))
(defvar *REDIS_HOST* (uri-host *REDIS_URI*))
(defvar *REDIS_PORT* (uri-port *REDIS_URI*))
(defun rdsgresponse()
  (let ((now (get-internal-real-time)) (text "") )
    (rds:with-connection (:host *REDIS_HOST*  :port *REDIS_PORT*)
                         (red:auth *REDIS_PWD*)
                         (red:set "X", "X" )
                         (red:get "X")
                         (setq text (write-to-string (- (get-internal-real-time) now)))
                         `(200 (:content-type "text/html") (,text))
                         )
    )
  )

